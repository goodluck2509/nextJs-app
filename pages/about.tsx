import React, { useEffect, useState } from "react";
import dynamic from "next/dynamic";
import posts from "./posts";
import { useRouter } from "next/router";

// Kh√¥ng mu·ªën th·∫±ng n√†y render ·ªü server v√¨ l√≠ do n√†o ƒë√≥ ch·ªâ render ·ªü client th√¥i d√πng dyamic*/
// https://nextjs.org/docs/routing/dynamic-routes
const Header = dynamic(() => import("@/components/common/header"), {
  ssr: false, // false ƒë·ªÉ t·∫Øt ph√°i server c√≤n ch·∫°y 2 b√™n th√¨ b·ªè th·∫±ng n√†y
});

export interface AboutProps {}

export default function About(props: AboutProps) {
  const [postList, setPostList] = useState([]);
  const router = useRouter();

  // chuy·ªÉn page goi api
  const page = Number(router.query?.page) || 1;
  useEffect(() => {
    if (!page) return;

    (async () => {
      const response = await fetch(
        `https://js-post-api.herokuapp.com/api/posts?_page=${page}`
      );
      const data = await response.json();
      setPostList(data.data); // c√°i n√†y demo v√†o d·ª± √°n d√πng useSWR ƒë·ªÉ code
    })();
  }, [page]);
  // h√†m n√∫t chuy·ªÉn page
  function handleChangePage() {
    router.push(
      {
        pathname: "/about",
        query: {
          page: (Number(page) || 1) + 1,
        },
      },
      undefined,
      { shallow: true }
      // ch·ªâ thay ƒë·ªïi b√™n ph√≠a client th√¥i t·∫Øt th·∫±ng n√†y th√¨ s·∫Ω g·ªçi l·∫°i h√†m getStaticProps() ph√≠a d∆∞·ªõi
      // https://nextjs.org/docs/routing/shallow-routing
    );
  }
  return (
    <div>
      <h1>This is About</h1>

      <Header />
      <ul className="posts-list">
        {postList.map((post: any) => (
          <li key={post.id}>{post.title}</li>
        ))}
      </ul>

      <button onClick={handleChangePage}>Click chuy·ªÉn page</button>
    </div>
  );
}

export async function getStaticProps() {
  console.log("üöÄ ~ getStaticProps ~ getStaticProps");

  return {
    props: {},
  };
}

// b·∫≠t th·∫±ng n√†y l√† serverside rendering
// export async function getServerProps() {
//   return {
//     props: {},
//   };
// }
